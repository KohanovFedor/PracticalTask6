//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Product_51172
{
    
    using System;
    
    using System.Xml;


    // *** Start programmer edit section *** (Using statements)
    using CodeGenerator;
    using ICSSoft.STORMNET;
    using System.Collections;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// UseDllCodeDecode.
    /// </summary>
    // *** Start programmer edit section *** (UseDllCodeDecode CustomAttributes)

    // *** End programmer edit section *** (UseDllCodeDecode CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class UseDllCodeDecode : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (UseDllCodeDecode CustomMembers)

        // *** End programmer edit section *** (UseDllCodeDecode CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateObjectsHeat CustomAttributes)

        // *** End programmer edit section *** (OnUpdateObjectsHeat CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateObjectsHeat(IIS.Product_51172.ObjectsHeat UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateObjectsHeat)
            DataObject[] result = new DataObject[1];
            ObjectsHeat oh = UpdatedObject;
            ArrayList retObjs = new ArrayList();

            if (UpdatedObject.GetStatus() == ICSSoft.STORMNET.ObjectStatus.Created || UpdatedObject.GetStatus() == ICSSoft.STORMNET.ObjectStatus.Altered)
            {
                if (Array.IndexOf(UpdatedObject.GetAlteredPropertyNames(), "Area") >= 0)
                {
                    var PKbuild = oh.Buildings.__PrimaryKey.ToString();
                    Buildings.CalculateSumArea(PKbuild, oh);
                }
                oh.QRcode = Generator.Encode(oh.NameObjectsHeat, oh.DateReg, (uint)oh.Clients.account);
                retObjs.Add(oh);
            }

            result = new DataObject[retObjs.Count];
            retObjs.CopyTo(result, 0);
            return result;
            // *** End programmer edit section *** (OnUpdateObjectsHeat)
        }
    }
}
