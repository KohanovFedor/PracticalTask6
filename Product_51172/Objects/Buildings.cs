//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Product_51172
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Здания.
    /// </summary>
    // *** Start programmer edit section *** (Buildings CustomAttributes)

    // *** End programmer edit section *** (Buildings CustomAttributes)
    [BusinessServer("IIS.Product_51172.BSForBuildings, Product_51172.BusinessServers", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    [AutoAltered()]
    [Caption("Здания")]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("BuildingsE", new string[] {
            "NameBuildings as \'Адрес здания\'",
            "Microdistrict as \'Микрорайон\'",
            "Microdistrict.NameMicrodistrict as \'Микрорайон\'"}, Hidden=new string[] {
            "Microdistrict.NameMicrodistrict"})]
    [MasterViewDefineAttribute("BuildingsE", "Microdistrict", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "NameMicrodistrict")]
    [View("BuildingsL", new string[] {
            "NameBuildings as \'Адрес здания\'",
            "Microdistrict.NameMicrodistrict as \'Микрорайон\'"})]
    public class Buildings : ICSSoft.STORMNET.DataObject
    {
        
        private string fNameBuildings;
        
        private double fSumArea;
        
        private IIS.Product_51172.Microdistrict fMicrodistrict;
        
        // *** Start programmer edit section *** (Buildings CustomMembers)
        /// <summary>
        /// CalculateSumArea - метод, который пересчитывает и записывает в базу данных сумму занимаемой площади всеми объектами теплопотребления для данного здания.
        /// PKbuild - PrimaryKey здания, для которого надо пересчитать
        /// </summary>
        public static void CalculateSumArea(string PKbuild, ObjectsHeat oh)
        {
            var ldef = SQLWhereLanguageDef.LanguageDef;
            ICSSoft.STORMNET.Business.LoadingCustomizationStruct lcs = ICSSoft.STORMNET.Business.LoadingCustomizationStruct.GetSimpleStruct(typeof(ObjectsHeat), "ObjectsHeatE");
            lcs.LimitFunction = ldef.GetFunction(ldef.funcSQL, "Buildings = \'{0}\'", PKbuild);
            ICSSoft.STORMNET.DataObject[] objs = ICSSoft.STORMNET.Business.DataServiceProvider.DataService.LoadObjects(lcs);
            double sumArea = 0.0;
            foreach (ObjectsHeat el in objs)
            {
                if (!el.__PrimaryKey.ToString().Equals(oh.__PrimaryKey.ToString()))
                sumArea += el.Area;
            }
            sumArea += oh.Area;
            try
            {
                var ds = (SQLDataService)DataServiceProvider.DataService;
                var b = new Buildings();
                b.SetExistObjectPrimaryKey(PKbuild);
                ds.LoadObject(b);
                b.SumArea = sumArea;
                ds.UpdateObject(b);
            }
            catch (Exception e)
            {
                throw new Exception("Ошибка: "+Environment.NewLine+e.Message);
            }
        }
        // *** End programmer edit section *** (Buildings CustomMembers)

        
        /// <summary>
        /// NameBuildings.
        /// </summary>
        // *** Start programmer edit section *** (Buildings.NameBuildings CustomAttributes)

        // *** End programmer edit section *** (Buildings.NameBuildings CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string NameBuildings
        {
            get
            {
                // *** Start programmer edit section *** (Buildings.NameBuildings Get start)

                // *** End programmer edit section *** (Buildings.NameBuildings Get start)
                string result = this.fNameBuildings;
                // *** Start programmer edit section *** (Buildings.NameBuildings Get end)

                // *** End programmer edit section *** (Buildings.NameBuildings Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Buildings.NameBuildings Set start)

                // *** End programmer edit section *** (Buildings.NameBuildings Set start)
                this.fNameBuildings = value;
                // *** Start programmer edit section *** (Buildings.NameBuildings Set end)

                // *** End programmer edit section *** (Buildings.NameBuildings Set end)
            }
        }
        
        /// <summary>
        /// SumArea.
        /// </summary>
        // *** Start programmer edit section *** (Buildings.SumArea CustomAttributes)

        // *** End programmer edit section *** (Buildings.SumArea CustomAttributes)
        public virtual double SumArea
        {
            get
            {
                // *** Start programmer edit section *** (Buildings.SumArea Get start)

                // *** End programmer edit section *** (Buildings.SumArea Get start)
                double result = this.fSumArea;
                // *** Start programmer edit section *** (Buildings.SumArea Get end)

                // *** End programmer edit section *** (Buildings.SumArea Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Buildings.SumArea Set start)

                // *** End programmer edit section *** (Buildings.SumArea Set start)
                this.fSumArea = value;
                // *** Start programmer edit section *** (Buildings.SumArea Set end)

                // *** End programmer edit section *** (Buildings.SumArea Set end)
            }
        }
        
        /// <summary>
        /// Здания.
        /// </summary>
        // *** Start programmer edit section *** (Buildings.Microdistrict CustomAttributes)

        // *** End programmer edit section *** (Buildings.Microdistrict CustomAttributes)
        [PropertyStorage(new string[] {
                "Microdistrict"})]
        [NotNull()]
        public virtual IIS.Product_51172.Microdistrict Microdistrict
        {
            get
            {
                // *** Start programmer edit section *** (Buildings.Microdistrict Get start)

                // *** End programmer edit section *** (Buildings.Microdistrict Get start)
                IIS.Product_51172.Microdistrict result = this.fMicrodistrict;
                // *** Start programmer edit section *** (Buildings.Microdistrict Get end)

                // *** End programmer edit section *** (Buildings.Microdistrict Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Buildings.Microdistrict Set start)

                // *** End programmer edit section *** (Buildings.Microdistrict Set start)
                this.fMicrodistrict = value;
                // *** Start programmer edit section *** (Buildings.Microdistrict Set end)

                // *** End programmer edit section *** (Buildings.Microdistrict Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "BuildingsE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View BuildingsE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("BuildingsE", typeof(IIS.Product_51172.Buildings));
                }
            }
            
            /// <summary>
            /// "BuildingsL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View BuildingsL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("BuildingsL", typeof(IIS.Product_51172.Buildings));
                }
            }
        }
    }
}
